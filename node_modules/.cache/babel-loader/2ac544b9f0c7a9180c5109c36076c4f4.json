{"ast":null,"code":"import _classCallCheck from \"/Users/mac/Documents/keyboardSTUDY/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/Documents/keyboardSTUDY/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mac/Documents/keyboardSTUDY/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mac/Documents/keyboardSTUDY/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mac/Documents/keyboardSTUDY/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mac/Documents/keyboardSTUDY/src/textarea.js\";\n\n/***************************************************\n* CSC428/2514 - St. George, Fall 2018 \n* \n* File: textarea.js\n* Summary: Textfield which displays input characters by users.\n* \n* The code is commented, and the comments provide information\n* about what each js file is doing.\n*\n* Written by: Seyong Ha, Mingming Fan, Sep. 2018\n*\t\t\t\tAssignment2: Quantitative Analysis\n*\t\t\t\tUpdated at: NA\n****************************************************/\n\n/**\n * Libraries\n */\nimport React from 'react';\n\nvar TextArea =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TextArea, _React$Component);\n\n  /**\n   * Constructor\n   *  * @param {} props: a paramater which enables you to access\n  * \t\t\tvalues passed from parent Componenet(or Node).\n  * \t\t\te.g., if you pass 'value' as 5 in Watch component\n  * \t\t\t\t<Watch value={5}/>\n  * \t\t\t\tyou can access by calling 'this.props.value'\n  * \t\t\t\tprops are immutable.\n   */\n  function TextArea(props) {\n    var _this;\n\n    _classCallCheck(this, TextArea);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TextArea).call(this, props)); // React State\n    // this component will display text, once this.state.text value has changed,\n    // TextArea component will re-render. *** text value has to be changed by \n    // 'setState({text: VALUE})'\n\n    _this.componentWillReceiveProps = function (nextProps) {\n      var c = nextProps.inputChar;\n      var displayText = _this.state.text; // if the input character is 'delete', \n      //  delete the last sentence from the displayed text.\n\n      if (nextProps.inputChar === \"delete\") {\n        displayText = displayText.substring(0, displayText.length - 1);\n\n        _this.setState({\n          text: displayText\n        });\n      } else {\n        displayText = displayText.concat(c);\n\n        _this.setState({\n          text: displayText\n        });\n      }\n    };\n\n    _this.state = {\n      text: \"\"\n    };\n    return _this;\n  }\n  /**\n   * Function in React Component lifecycle.\n   * When the parent component pass different properties, \n   * This function will be called.\n   */\n\n\n  _createClass(TextArea, [{\n    key: \"render\",\n\n    /**\n     * Render function.\n     * This one returns <div></div> with classname \"type\".\n     * You can do inline styling by pass css values to 'style' property.\n     * You can do either\n     *  style={YOUR STYLE} or\n     *  style={{CSS_PROP: YOUR_VALUE, CSS_PROP: YOURVALUE,..}} \n     */\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"typed\",\n        style: this.props.style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.state.text);\n    }\n  }]);\n\n  return TextArea;\n}(React.Component);\n\nexport default TextArea;","map":{"version":3,"sources":["/Users/mac/Documents/keyboardSTUDY/src/textarea.js"],"names":["React","TextArea","props","componentWillReceiveProps","nextProps","c","inputChar","displayText","state","text","substring","length","setState","concat","style","Component"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;AAcA;;;AAGA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,Q;;;;;AACF;;;;;;;;;AASA,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,kFAAMA,KAAN,GADc,CAEd;AACA;AACA;AACA;;AALc,UAgBlBC,yBAhBkB,GAgBS,UAACC,SAAD,EAAe;AACtC,UAAIC,CAAC,GAAGD,SAAS,CAACE,SAAlB;AACA,UAAIC,WAAW,GAAG,MAAKC,KAAL,CAAWC,IAA7B,CAFsC,CAItC;AACA;;AACA,UAAGL,SAAS,CAACE,SAAV,KAAwB,QAA3B,EAAqC;AACjCC,QAAAA,WAAW,GAAGA,WAAW,CAACG,SAAZ,CAAsB,CAAtB,EAAwBH,WAAW,CAACI,MAAZ,GAAmB,CAA3C,CAAd;;AACA,cAAKC,QAAL,CAAc;AAACH,UAAAA,IAAI,EAAEF;AAAP,SAAd;AACH,OAHD,MAGO;AACHA,QAAAA,WAAW,GAAGA,WAAW,CAACM,MAAZ,CAAmBR,CAAnB,CAAd;;AACA,cAAKO,QAAL,CAAc;AAACH,UAAAA,IAAI,EAAEF;AAAP,SAAd;AACH;AACJ,KA7BiB;;AAMd,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AANc;AASjB;AAED;;;;;;;;;;AAoBA;;;;;;;;6BAQQ;AACJ,aACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAuB,QAAA,KAAK,EAAI,KAAKP,KAAL,CAAWY,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKN,KAAL,CAAWC,IADhB,CADJ;AAKH;;;;EAvDkBT,KAAK,CAACe,S;;AA0D7B,eAAed,QAAf","sourcesContent":["/***************************************************\n* CSC428/2514 - St. George, Fall 2018 \n* \n* File: textarea.js\n* Summary: Textfield which displays input characters by users.\n* \n* The code is commented, and the comments provide information\n* about what each js file is doing.\n*\n* Written by: Seyong Ha, Mingming Fan, Sep. 2018\n*\t\t\t\tAssignment2: Quantitative Analysis\n*\t\t\t\tUpdated at: NA\n****************************************************/\n\n/**\n * Libraries\n */\nimport React from 'react'\n\nclass TextArea extends React.Component{\n    /**\n     * Constructor\n     *  * @param {} props: a paramater which enables you to access\n\t * \t\t\tvalues passed from parent Componenet(or Node).\n\t * \t\t\te.g., if you pass 'value' as 5 in Watch component\n\t * \t\t\t\t<Watch value={5}/>\n\t * \t\t\t\tyou can access by calling 'this.props.value'\n\t * \t\t\t\tprops are immutable.\n     */\n    constructor(props){\n        super(props);\n        // React State\n        // this component will display text, once this.state.text value has changed,\n        // TextArea component will re-render. *** text value has to be changed by \n        // 'setState({text: VALUE})'\n        this.state = {\n            text: \"\"\n        }\n    }\n\n    /**\n     * Function in React Component lifecycle.\n     * When the parent component pass different properties, \n     * This function will be called.\n     */\n    componentWillReceiveProps= (nextProps) => {\n        var c = nextProps.inputChar;\n        var displayText = this.state.text;\n\n        // if the input character is 'delete', \n        //  delete the last sentence from the displayed text.\n        if(nextProps.inputChar === \"delete\") {\n            displayText = displayText.substring(0,displayText.length-1);\n            this.setState({text: displayText})\n        } else {\n            displayText = displayText.concat(c);\n            this.setState({text: displayText})\n        }\n    }\n\n    /**\n     * Render function.\n     * This one returns <div></div> with classname \"type\".\n     * You can do inline styling by pass css values to 'style' property.\n     * You can do either\n     *  style={YOUR STYLE} or\n     *  style={{CSS_PROP: YOUR_VALUE, CSS_PROP: YOURVALUE,..}} \n     */\n    render(){\n        return(\n            <div className=\"typed\" style = {this.props.style}>\n                {this.state.text}\n            </div>\n        )\n    }\n}\n\nexport default TextArea;\n"]},"metadata":{},"sourceType":"module"}