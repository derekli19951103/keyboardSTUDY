{"ast":null,"code":"import _classCallCheck from \"/Users/mac/Documents/keyboardSTUDY/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/Documents/keyboardSTUDY/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mac/Documents/keyboardSTUDY/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mac/Documents/keyboardSTUDY/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mac/Documents/keyboardSTUDY/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mac/Documents/keyboardSTUDY/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mac/Documents/keyboardSTUDY/src/keyboard.wip.js\";\n\n/***************************************************\n* CSC428/2514 - St. George, Fall 2018 \n* \n* File: keyboard.wip.js\n* Summary: This component will display the Zoomable keyboard.\n*\tThis keyboard will be zoomed as users touch/click. \n*\tUsers can zoom twice. If users reached secone-level zoom by tapping twice, \n*\tthey can select the key they want to input.\n*\tReact do not recommend Inherit officially, for the convenience, we apply inheritance\n*\tin this code. \n* The code is commented, and the comments provide information\n* about what each js file is doing.\n*\n* Written by: Seyong Ha, Mingming Fan, Sep. 2018\n*\t\t\t\tAssignment2: Quantitative Analysis\n*\t\t\t\tUpdated at: NA\n****************************************************/\n\n/**\n * Libraries\n */\nimport React from 'react';\nimport ReactDOM from 'react-dom'; //import Keymaps from './keys.js'\n\nimport KeyboardNormal from './keyboard.normal.js';\n/**\n * Zoomable Keyboard class extending KeyboardNormal\n */\n\nvar KeyboardZoom =\n/*#__PURE__*/\nfunction (_KeyboardNormal) {\n  _inherits(KeyboardZoom, _KeyboardNormal);\n\n  /**\n   * Constructor\n   * @param {} props: a paramater which enables you to access\n   * \t\t\tvalues passed from parent Componenet(or Node).\n   * \t\t\te.g., if you pass 'value' as 5 in Watch component\n   * \t\t\t\t<Watch value={5}/>\n   * \t\t\t\tyou can access by calling 'this.props.value'\n   * \t\t\t\tprops are immutable.\n   */\n  function KeyboardZoom(props) {\n    var _this;\n\n    _classCallCheck(this, KeyboardZoom);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(KeyboardZoom).call(this, props)); // add more keyboard configuration.\n\n    _this.onSwipe = function (direction) {\n      if (direction === \"left\") {\n        // Delete character.\n        var key = \"delete\";\n\n        _this.props.onKeyCharReceived(key);\n      } else if (direction === \"up\") {\n        // Change keyboard layout from one to another.\n        // You have two keyboard layout. Alphabet and Symbols.\n        var imgPath = _this.state.keyboardImg === _this.imgs[0] ? _this.imgs[1] : _this.imgs[0];\n\n        _this.setState({\n          keyboardImg: imgPath\n        });\n      }\n    };\n\n    _this.componentDidUpdate = function () {\n      // For touch event, we cannot use offsetX and offsetY\n      // \tto calculate the touched point on the keyboard image, \n      //  we stored the 'container' <div>'s left and top values on screen.\n      _this.offsetTop = ReactDOM.findDOMNode(_assertThisInitialized(_assertThisInitialized(_this))).offsetTop;\n      _this.offsetLeft = ReactDOM.findDOMNode(_assertThisInitialized(_assertThisInitialized(_this))).offsetLeft;\n    };\n\n    _this.onKeyClick = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      var currentZoomX = _this.getXZoom();\n\n      var currentZoomY = _this.getYZoom();\n\n      var currentZoomVal = _this.getZoom();\n\n      var scaleFactor = _this.config.zoomFactor;\n      var centerBias = _this.config.centerBias;\n      var maxZoom = _this.config.maxZoom;\n\n      _this.clearResetTimeout(); //console.log(\"viewport in wip: \"+this.viewport.width + \":\"+this.viewport.height);\n\n\n      var x = e.nativeEvent.offsetX / currentZoomX + _this.viewport.x;\n      var y = e.nativeEvent.offsetY / currentZoomY + _this.viewport.y; //\tconsole.log(\"WIP[Click before doZoom] eventOffset => \"+e.nativeEvent.offsetX + \"/\"+e.nativeEvent.offsetY);\n      //\tconsole.log(\"WIP[Click before doZoom] curZoom and Viewport => \"+ currentZoomX + \"/\" + currentZoomY + \"/\"+ this.viewport.x + \"/\"+this.viewport.y);\n\n      console.log(\"WIP[Click before doZoom] xy => \" + x + \"/\" + y);\n\n      _this.doZoom(x, y, scaleFactor, currentZoomVal, maxZoom, centerBias);\n\n      _this.resetTimeoutFunc();\n\n      return false;\n    };\n\n    _this.resetTimeoutFunc = function () {\n      _this.clearResetTimeout();\n\n      var resetTimeout = _this.config.resetTimeout;\n      _this.resetTimeout = window.setTimeout(_this.reset, resetTimeout);\n    };\n\n    _this.doZoom = function (x, y, scaleFactor, currentZoomVal, maxZoom, centerBias) {\n      //var zoomtouch_event = jQuery.Event(\"zb_zoom\")\n      //zoomtouch_event.x = x;, zoomtouch_event.y = y;\n      //this.element.trigger(zoomtouch_event);\n      console.log(\"[Debug] scaleFactor/ CurrnetZoomVal / maxZoom -> \" + scaleFactor + \"/ \" + currentZoomVal + \"/ \" + maxZoom);\n\n      if (scaleFactor * currentZoomVal > maxZoom) {\n        //console.log(\"Exceeded maxZoom \");\n        var key = _this.getKeyChar({\n          x: x,\n          y: y\n        });\n\n        if (key !== null) {\n          //this.element.trigger(zoomkey_event);\n          //this.flashkey(zoomkey_event.key);\n          console.log(\"[doZoom] Key is not null\");\n\n          _this.props.onKeyCharReceived(key);\n\n          _this.flashKey(key);\n        }\n\n        _this.reset();\n\n        return;\n      } else {\n        _this.inStartingPosition = false;\n        var newViewportWidth = _this.viewport.width / scaleFactor;\n        var newViewportHeight = _this.viewport.height / scaleFactor;\n        var centeredX = x - newViewportWidth / 2;\n        var centeredY = y - newViewportHeight / 2;\n        var biasedViewportX = x - newViewportWidth * (x - _this.viewport.x) / _this.viewport.width;\n        var biasedViewportY = y - newViewportHeight * (y - _this.viewport.y) / _this.viewport.height; //console.log(\"doZoom in wip: \"+this.viewport.width + \":\"+this.viewport.height);\n        //console.log(\"doZoom in wip: \"+this.viewport.x + \":\"+this.viewport.y);\n        //console.log(\"doZoom in wip: \"+scaleFactor);\n        //console.log(\"doZoom in wip: \"+newViewportWidth+ \":\"+newViewportHeight);\n        //console.log(\"doZoom in wip: \"+centeredX + \":\" + centeredY);\n\n        _this.setViewPort({\n          width: newViewportWidth,\n          height: newViewportHeight,\n          x: biasedViewportX * (1 - centerBias) + centeredX * centerBias,\n          y: biasedViewportY * (1 - centerBias) + centeredY * centerBias\n        });\n      }\n    };\n\n    _this.getXZoom = function () {\n      return _this.position.width / _this.state.originalDimensions.width;\n    };\n\n    _this.getYZoom = function () {\n      return _this.position.height / _this.state.originalDimensions.height;\n    };\n\n    _this.getZoom = function () {\n      return Math.max(_this.getXZoom(), _this.getYZoom());\n    };\n\n    _this.flash = function (text, duration, color) {\n      duration = duration || 250;\n      color = color || \"white\"; //window.clearTimeout(this.flashTimeout);\n\n      _this.setState({\n        overlayStyle: {\n          opacity: 0.95,\n          color: color\n        },\n        overlayText: text\n      });\n\n      setTimeout(function () {\n        this.setState({\n          overlayStyle: {\n            opacity: 0\n          }\n        });\n      }.bind(_assertThisInitialized(_assertThisInitialized(_this))), duration);\n    };\n\n    _this.flashKey = function (key) {\n      if (key === \"delete\") {\n        //this.flash(\"&#9224;\");\n        _this.flash(\"&#x232B\");\n      } else if (key === \"enter\") {\n        _this.flash(\"&#9252;\");\n      } else if (key === \" \") {\n        _this.flash(\"&#9251;\");\n      } else {\n        _this.flash(key);\n      }\n    };\n\n    console.log(_this.props.originalScale);\n    _this.config.zoomFactor = 2.2;\n    _this.config.originalScale = _this.props.originalScale;\n    _this.config.maxZoom = 1.0;\n    _this.config.resetOnMaxZoom = true;\n    _this.config.centerBias = 0.05;\n\n    if (window.PointerEvent) {\n      _this.onPointerUp = _this.onPointerUp.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      _this.onTouchStart = _this.onTouchStart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      _this._onTouchMove = _this._onTouchMove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      _this._onTouchEnd = _this._onTouchEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    } else {\n      _this.onTouchStart = _this.onTouchStart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      _this.onMouseDown = _this.onMouseDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      _this._onTouchMove = _this._onTouchMove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      _this._onTouchEnd = _this._onTouchEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    }\n\n    return _this;\n  }\n  /**\n   * Touch Event handlers\n   * @param {*} e : to access javascript touchevent, \n   * \t\t\t\t\tyou should access as 'e.nativeEvent'\n   */\n\n\n  _createClass(KeyboardZoom, [{\n    key: \"onTouchStart\",\n    value: function onTouchStart(e) {\n      console.log(\"touchstart\");\n      this.isMoving = false; //const touch = e.nativeEvent.touches[0];\n\n      if (this.inStartingPosition && e.nativeEvent.touches.length === 1) {\n        this.startX = e.nativeEvent.touches[0].pageX;\n        this.startY = e.nativeEvent.touches[0].pageY;\n        this.isMoving = true;\n      }\n    }\n    /**\n     * Touch Event Handler \n     * @param {*} e : touch event object.\n     */\n\n  }, {\n    key: \"_onTouchMove\",\n    value: function _onTouchMove(e) {\n      console.log(\"touchmove\");\n\n      if (this.isMoving === true) {\n        var x = e.nativeEvent.touches[0].pageX;\n        var y = e.nativeEvent.touches[0].pageY;\n        var dx = this.startX - x;\n        var dy = this.startY - y;\n        console.log(\"DX: \" + dx + \"/\" + dy);\n\n        if (Math.abs(dx) >= this.config.minSwipeX) {\n          if (dx > 0) {\n            this.onSwipe(\"left\");\n            this.justGestured = true;\n            this.isMoving = false;\n            this.startX = this.startY = null;\n            console.log(\"swipeleft\");\n          } else {\n            this.onSwipe(\"right\");\n            console.log(\"swiperight\");\n            this.justGestured = true;\n            this.isMoving = false;\n            this.startX = this.startY = null;\n          }\n        } else if (Math.abs(dy) >= this.config.minSwipeY) {\n          if (dy > 0) {\n            this.onSwipe(\"up\");\n            console.log(\"swipeup\");\n            this.justGestured = true;\n            this.isMoving = false;\n            this.startX = this.startY = null;\n          } else {\n            this.onSwipe(\"down\");\n            this.justGestured = true;\n            this.isMoving = false;\n            this.startX = this.startY = null;\n          }\n        }\n      }\n    }\n    /**\n     * TouchEvent Handler\n     * @param {} e : touch event object.\n     */\n\n  }, {\n    key: \"_onTouchEnd\",\n    value: function _onTouchEnd(e) {\n      console.log(\"TouchEND\");\n\n      if (this.justGestured === true) {\n        this.justGestured = false;\n        e.preventDefault();\n        e.stopPropagation();\n        return;\n      } else {\n        e.preventDefault();\n        e.stopPropagation();\n        this.onFingerTouch(e);\n      }\n    }\n    /**\n     * PointerUp Event Handler, Use only for Debugging on laptop.\n     * @param {*} e \n     *  We are using offsetX and offsetY. The origin of offsetX and offsetY is left,top of 'container' <div>\n     */\n\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp(e) {\n      console.log(e.nativeEvent.pointerType);\n\n      if (e.nativeEvent.pointerType === \"touch\") {\n        //Do nothing\n        return false;\n      }\n\n      e.stopPropagation();\n      console.log(\"[PointerUp] xy - \" + e.nativeEvent.offsetX + \"/\" + e.nativeEvent.offsetY);\n      this.onKeyClick(e); //e.preventDefault();\n      //e.stopPropagation();\n\n      return false;\n    }\n    /**\n     * MouseDown Event Handler, \n     *  same as PointerUp. This is implemented to test with your mouse on devtools of your browser.\n     * @param {*} e \n     */\n\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(e) {\n      console.log(\"[MouseDown] xy - \" + e.nativeEvent.offsetX + \"/\" + e.nativeEvent.offsetY);\n      this.onKeyClick(e);\n      e.preventDefault();\n      e.stopPropagation();\n      return false;\n    }\n    /**\n     * SwipeEvent Handler, manually called from the code.\n     * \tCurrently, we are using only 'left' and 'up' directions.\n     * @param: direction, swiping direction.\n     */\n\n  }, {\n    key: \"render\",\n\n    /**\n     * Render function\n     */\n    value: function render() {\n      var size = this.getWindowDimension();\n      var style = {\n        width: size.width,\n        height: size.height\n      };\n      var overlayStyle = {\n        width: size.width,\n        height: size.height,\n        opacity: this.state.overlayStyle.opacity,\n        color: this.state.overlayStyle.color,\n        fontSize: size.height / 1.2 + \"px\"\n      };\n\n      if (window.PointerEvent) {\n        return React.createElement(\"div\", {\n          className: \"container\",\n          style: style,\n          tabIndex: \"-1\",\n          onKeyDown: this.onKeyDown,\n          onTouchStart: this.onTouchStart,\n          onTouchMove: this._onTouchMove,\n          onTouchEnd: this._onTouchEnd,\n          onPointerUp: this.onPointerUp,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          id: \"keyboardtype\",\n          className: \"KB\",\n          alt: \"kb\",\n          src: this.state.keyboardImg,\n          onLoad: this.onLoad,\n          style: this.state.imgStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"overlay\",\n          style: overlayStyle,\n          dangerouslySetInnerHTML: {\n            __html: this.state.overlayText\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }));\n      } else {\n        //else\n        return React.createElement(\"div\", {\n          className: \"container\",\n          style: style,\n          tabIndex: \"-1\",\n          onKeyDown: this.onKeyDown,\n          onMouseDown: this.onMouseDown,\n          onTouchStart: this.onTouchStart,\n          onTouchMove: this._onTouchMove,\n          onTouchEnd: this._onTouchEnd,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          id: \"keyboardtype\",\n          className: \"KB\",\n          alt: \"kb\",\n          src: this.state.keyboardImg,\n          onLoad: this.onLoad,\n          style: this.state.imgStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"overlay\",\n          style: overlayStyle,\n          dangerouslySetInnerHTML: {\n            __html: this.state.overlayText\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }));\n      }\n    }\n    /**\n     * KeyClick Event Handler on the keyboard image.\n     *  Zoom level and and center of zoomed image are computed here.\n     *  More details in doZoom function();\n     * @param e: Touch / Pointer Event \n     */\n\n  }, {\n    key: \"onFingerTouch\",\n\n    /**\n     * For Touch Event\n     */\n    value: function onFingerTouch(e) {\n      console.log(\"OnFingerTouch\"); //e.preventDefault();\n      //e.stopPropagation();\n\n      var currentZoomX = this.getXZoom();\n      var currentZoomY = this.getYZoom();\n      var currentZoomVal = this.getZoom();\n      var scaleFactor = this.config.zoomFactor;\n      var centerBias = this.config.centerBias;\n      var maxZoom = this.config.maxZoom;\n      this.clearResetTimeout();\n      var touch = e.nativeEvent.changedTouches[0]; //e.nativeEvent.changedTouches[0];\n      // console.log(\"touch start x: \" + touch.clientX + \"; y: \" + touch.clientY);\n\n      this.clearResetTimeout(); //Assuming mouse\n\n      if (this.config.isTouchEnabled) {} else {\n        //pageX includes scroll offset Value\n        // console.log(\"[offset] - \"+this.offsetLeft + \"/\" + this.offsetTop);\n        var x = (touch.pageX - this.offsetLeft) / currentZoomX + this.viewport.x;\n        var y = (touch.pageY - this.offsetTop) / currentZoomY + this.viewport.y; //console.log(\"[Click before doZoom] touchXY => \"+touch.clientX + \"/\"+touch.clientY);\n        // console.log(\"[Click before doZoom] curZoom and Viewport => \"+ currentZoomX + \"/\" + currentZoomY + \"/\"+ this.viewport.x + \"/\"+this.viewport.y);\n\n        console.log(\"[Click before doZoom] xy => \" + x + \"/\" + y);\n        this.doZoom(x, y, scaleFactor, currentZoomVal, maxZoom, centerBias);\n        this.resetTimeoutFunc();\n      } //e.stopPropagation();\n\n\n      return false;\n    }\n  }]);\n\n  return KeyboardZoom;\n}(KeyboardNormal);\n\nexport default KeyboardZoom;","map":{"version":3,"sources":["/Users/mac/Documents/keyboardSTUDY/src/keyboard.wip.js"],"names":["React","ReactDOM","KeyboardNormal","KeyboardZoom","props","onSwipe","direction","key","onKeyCharReceived","imgPath","state","keyboardImg","imgs","setState","componentDidUpdate","offsetTop","findDOMNode","offsetLeft","onKeyClick","e","preventDefault","stopPropagation","currentZoomX","getXZoom","currentZoomY","getYZoom","currentZoomVal","getZoom","scaleFactor","config","zoomFactor","centerBias","maxZoom","clearResetTimeout","x","nativeEvent","offsetX","viewport","y","offsetY","console","log","doZoom","resetTimeoutFunc","resetTimeout","window","setTimeout","reset","getKeyChar","flashKey","inStartingPosition","newViewportWidth","width","newViewportHeight","height","centeredX","centeredY","biasedViewportX","biasedViewportY","setViewPort","position","originalDimensions","Math","max","flash","text","duration","color","overlayStyle","opacity","overlayText","bind","originalScale","resetOnMaxZoom","PointerEvent","onPointerUp","onTouchStart","_onTouchMove","_onTouchEnd","onMouseDown","isMoving","touches","length","startX","pageX","startY","pageY","dx","dy","abs","minSwipeX","justGestured","minSwipeY","onFingerTouch","pointerType","size","getWindowDimension","style","fontSize","onKeyDown","onLoad","imgStyle","__html","touch","changedTouches","isTouchEnabled"],"mappings":"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","sourcesContent":["/***************************************************\n* CSC428/2514 - St. George, Fall 2018 \n* \n* File: keyboard.wip.js\n* Summary: This component will display the Zoomable keyboard.\n*\tThis keyboard will be zoomed as users touch/click. \n*\tUsers can zoom twice. If users reached secone-level zoom by tapping twice, \n*\tthey can select the key they want to input.\n*\tReact do not recommend Inherit officially, for the convenience, we apply inheritance\n*\tin this code. \n* The code is commented, and the comments provide information\n* about what each js file is doing.\n*\n* Written by: Seyong Ha, Mingming Fan, Sep. 2018\n*\t\t\t\tAssignment2: Quantitative Analysis\n*\t\t\t\tUpdated at: NA\n****************************************************/\n\n/**\n * Libraries\n */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n//import Keymaps from './keys.js'\nimport KeyboardNormal from './keyboard.normal.js'\n\n/**\n * Zoomable Keyboard class extending KeyboardNormal\n */\nclass KeyboardZoom extends KeyboardNormal {\n\n\t/**\n\t * Constructor\n\t * @param {} props: a paramater which enables you to access\n\t * \t\t\tvalues passed from parent Componenet(or Node).\n\t * \t\t\te.g., if you pass 'value' as 5 in Watch component\n\t * \t\t\t\t<Watch value={5}/>\n\t * \t\t\t\tyou can access by calling 'this.props.value'\n\t * \t\t\t\tprops are immutable.\n\t */\n\tconstructor(props){\n\t\tsuper(props);\n\t\t// add more keyboard configuration.\n\t\tconsole.log(this.props.originalScale);\n\t\tthis.config.zoomFactor = 2.2;\n\t\tthis.config.originalScale = this.props.originalScale;\n\t\tthis.config.maxZoom = 1.0;\n\t\tthis.config.resetOnMaxZoom =  true;\n\t\tthis.config.centerBias = 0.05\n\t\tif(window.PointerEvent){\n\t\t\tthis.onPointerUp = this.onPointerUp.bind(this);\n\t\t\tthis.onTouchStart = this.onTouchStart.bind(this);\n\t\t\tthis._onTouchMove = this._onTouchMove.bind(this);\n\t\t\tthis._onTouchEnd = this._onTouchEnd.bind(this);\n\t\t}else{\n\t\t\tthis.onTouchStart = this.onTouchStart.bind(this);\n\t\t\tthis.onMouseDown = this.onMouseDown.bind(this);\n\t\t\tthis._onTouchMove = this._onTouchMove.bind(this);\n\t\t\tthis._onTouchEnd = this._onTouchEnd.bind(this);\n\t\t}\n\t}\n\n\t/**\n\t * Touch Event handlers\n\t * @param {*} e : to access javascript touchevent, \n\t * \t\t\t\t\tyou should access as 'e.nativeEvent'\n\t */\n\tonTouchStart(e) {\n\t\tconsole.log(\"touchstart\");\n\t\tthis.isMoving = false;\n\t\t//const touch = e.nativeEvent.touches[0];\n\t\tif(this.inStartingPosition && e.nativeEvent.touches.length === 1){\n\t\t\tthis.startX = e.nativeEvent.touches[0].pageX;\n\t\t\tthis.startY = e.nativeEvent.touches[0].pageY;\n\t\t\tthis.isMoving = true;\n\t\t}\n\t}\n\n\t/**\n\t * Touch Event Handler \n\t * @param {*} e : touch event object.\n\t */\n\t_onTouchMove(e) {\n\t\tconsole.log(\"touchmove\");\n\t\tif(this.isMoving === true){\n\t\t\tvar x = e.nativeEvent.touches[0].pageX;\n\t\t\tvar y = e.nativeEvent.touches[0].pageY;\n\t\t\tvar dx = this.startX - x; \n\t\t\tvar dy = this.startY - y;\n\t\t\tconsole.log(\"DX: \"+dx+\"/\"+dy);\n\t\t\tif(Math.abs(dx) >= this.config.minSwipeX){\n\t\t\t\tif(dx > 0){\n\t\t\t\t\tthis.onSwipe(\"left\");\n\t\t\t\t\tthis.justGestured = true;\n\t\t\t\t\tthis.isMoving = false;\n\t\t\t\t\tthis.startX = this.startY = null;\n\t\t\t\t\tconsole.log(\"swipeleft\");\n\t\t\t\t}else{\n\t\t\t\t\tthis.onSwipe(\"right\");\n\t\t\t\t\tconsole.log(\"swiperight\");\n\t\t\t\t\tthis.justGestured = true;\n\t\t\t\t\tthis.isMoving = false;\n\t\t\t\t\tthis.startX = this.startY = null;\n\t\t\t\t}\n\t\t\t}else if(Math.abs(dy) >= this.config.minSwipeY){\n\t\t\t\tif(dy > 0){\n\t\t\t\t\tthis.onSwipe(\"up\");\n\t\t\t\t\tconsole.log(\"swipeup\");\n\t\t\t\t\tthis.justGestured = true;\n\t\t\t\t\tthis.isMoving = false;\n\t\t\t\t\tthis.startX = this.startY = null;\n\t\t\t\t}else{\n\t\t\t\t\tthis.onSwipe(\"down\");\n\t\t\t\t\tthis.justGestured = true;\n\t\t\t\t\tthis.isMoving = false;\n\t\t\t\t\tthis.startX = this.startY = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * TouchEvent Handler\n\t * @param {} e : touch event object.\n\t */\n\t_onTouchEnd(e) {\n\t\tconsole.log(\"TouchEND\");\n\t\tif(this.justGestured === true){\n\t\t\tthis.justGestured = false;\n\t\t\te.preventDefault()\n\t\t\te.stopPropagation();\n\t\t\treturn;\n\t\t}else{\n\t\t\te.preventDefault()\n\t\t\te.stopPropagation();\n\t\t\tthis.onFingerTouch(e);\n\t\t}\n\t}\n\n\t/**\n\t * PointerUp Event Handler, Use only for Debugging on laptop.\n\t * @param {*} e \n\t *  We are using offsetX and offsetY. The origin of offsetX and offsetY is left,top of 'container' <div>\n\t */\n\tonPointerUp(e){\n\t\tconsole.log(e.nativeEvent.pointerType);\n\t\tif(e.nativeEvent.pointerType === \"touch\"){\n\t\t\t//Do nothing\n\t\t\treturn false;\n\t\t}\n\t\te.stopPropagation();\n\t\tconsole.log(\"[PointerUp] xy - \"+e.nativeEvent.offsetX + \"/\"+e.nativeEvent.offsetY);\n\t\tthis.onKeyClick(e);\n\t\t//e.preventDefault();\n\t\t//e.stopPropagation();\n\t\treturn false;\n\t}\n\n\t/**\n\t * MouseDown Event Handler, \n\t *  same as PointerUp. This is implemented to test with your mouse on devtools of your browser.\n\t * @param {*} e \n\t */\n\tonMouseDown(e) {\n\t\tconsole.log(\"[MouseDown] xy - \"+e.nativeEvent.offsetX + \"/\"+e.nativeEvent.offsetY);\n\t\tthis.onKeyClick(e);\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\treturn false;\n\t}\n\n\t/**\n\t * SwipeEvent Handler, manually called from the code.\n\t * \tCurrently, we are using only 'left' and 'up' directions.\n\t * @param: direction, swiping direction.\n\t */\n\tonSwipe = (direction) => {\n\t\tif(direction === \"left\"){ // Delete character.\n\t\t\tvar key = \"delete\";\n\t\t\tthis.props.onKeyCharReceived(key);\n\t\t}else if(direction === \"up\"){ // Change keyboard layout from one to another.\n\t\t\t// You have two keyboard layout. Alphabet and Symbols.\n\t\t\tvar imgPath = (this.state.keyboardImg === this.imgs[0])? this.imgs[1] : this.imgs[0];\n\t\t\tthis.setState({\n\t\t\t\tkeyboardImg:imgPath \n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Callback in React Componenet lifecycle.\n\t * once all the component value has changed, this function is called.\n\t */\n\tcomponentDidUpdate = () => {\n\t\t// For touch event, we cannot use offsetX and offsetY\n\t\t// \tto calculate the touched point on the keyboard image, \n\t\t//  we stored the 'container' <div>'s left and top values on screen.\n\t\tthis.offsetTop = ReactDOM.findDOMNode(this).offsetTop;\n\t\tthis.offsetLeft = ReactDOM.findDOMNode(this).offsetLeft;\n\t}\n\n\t/**\n\t * Render function\n\t */\n\trender(){\n\t\tconst size = this.getWindowDimension();\n\t\tconst style = {\n\t\t\twidth: size.width,\n\t\t\theight: size.height,\n\t\t};\n\t\tconst overlayStyle = {\n\t\t\twidth: size.width,\n\t\t\theight: size.height,\n\t\t\topacity: this.state.overlayStyle.opacity,\n\t\t\tcolor: this.state.overlayStyle.color,\n\t\t\tfontSize: (size.height/1.2)+\"px\"\n\t\t};\n\t\tif(window.PointerEvent){\n\t\t\treturn(\n\t\t\t\t<div className=\"container\" style = {style} tabIndex=\"-1\"\n\t\t\t\t\t\tonKeyDown={this.onKeyDown}\n\t\t\t\t\t\tonTouchStart={this.onTouchStart}\n\t\t\t\t\t\tonTouchMove={this._onTouchMove}\n\t\t\t\t\t\tonTouchEnd={this._onTouchEnd}\n\t\t\t\t\t\tonPointerUp = {this.onPointerUp}>\n\t\t\t\t\t<img id=\"keyboardtype\" className=\"KB\" alt=\"kb\"\n\t\t\t\t\t\tsrc={this.state.keyboardImg} onLoad={this.onLoad}\n\t\t\t\t\t\tstyle={this.state.imgStyle}/>\n\t\t\t\t\t<div className=\"overlay\" \n\t\t\t\t\t\tstyle={overlayStyle}\n\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t__html: this.state.overlayText\n\t\t\t\t\t\t}}></div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}else{ //else\n\t\t\treturn(\n\t\t\t\t<div className=\"container\" style = {style} tabIndex=\"-1\"\n\t\t\t\t\t\tonKeyDown={this.onKeyDown}\n\t\t\t\t\t\tonMouseDown = {this.onMouseDown}\n\t\t\t\t\t\tonTouchStart={this.onTouchStart}\n\t\t\t\t\t\tonTouchMove={this._onTouchMove}\n\t\t\t\t\t\tonTouchEnd={this._onTouchEnd}>\n\t\t\t\t\t<img id=\"keyboardtype\" className=\"KB\" alt=\"kb\"\n\t\t\t\t\t\tsrc={this.state.keyboardImg} onLoad={this.onLoad}\n\t\t\t\t\t\tstyle={this.state.imgStyle}/>\n\t\t\t\t\t<div className=\"overlay\" \n\t\t\t\t\t\tstyle={overlayStyle}\n\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t__html: this.state.overlayText\n\t\t\t\t\t\t}}></div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}\n\n\n\t/**\n\t * KeyClick Event Handler on the keyboard image.\n\t *  Zoom level and and center of zoomed image are computed here.\n\t *  More details in doZoom function();\n\t * @param e: Touch / Pointer Event \n\t */\n\tonKeyClick = (e) => {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\n\t\tvar currentZoomX = this.getXZoom();\n\t\tvar currentZoomY = this.getYZoom();\n\t\tvar currentZoomVal = this.getZoom();\n\n\t\tvar scaleFactor = this.config.zoomFactor;\n\t\tvar centerBias = this.config.centerBias;\n\t\tvar maxZoom = this.config.maxZoom;\n\n\t\tthis.clearResetTimeout();\n\t\t//console.log(\"viewport in wip: \"+this.viewport.width + \":\"+this.viewport.height);\n\t\tvar x = e.nativeEvent.offsetX / currentZoomX + this.viewport.x;\n\t\tvar y = e.nativeEvent.offsetY / currentZoomY + this.viewport.y;\n\t\t//\tconsole.log(\"WIP[Click before doZoom] eventOffset => \"+e.nativeEvent.offsetX + \"/\"+e.nativeEvent.offsetY);\n\t\t//\tconsole.log(\"WIP[Click before doZoom] curZoom and Viewport => \"+ currentZoomX + \"/\" + currentZoomY + \"/\"+ this.viewport.x + \"/\"+this.viewport.y);\n\t\t\tconsole.log(\"WIP[Click before doZoom] xy => \"+x + \"/\"+y);\n\t\tthis.doZoom(x,y,scaleFactor,currentZoomVal,maxZoom,centerBias);\n\t\tthis.resetTimeoutFunc();\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * For Touch Event\n\t */\n\tonFingerTouch(e){\n\t\tconsole.log(\"OnFingerTouch\");\n\t\t//e.preventDefault();\n\t\t//e.stopPropagation();\n\t\tvar currentZoomX = this.getXZoom();\n\t\tvar currentZoomY = this.getYZoom();\n\t\tvar currentZoomVal = this.getZoom();\n\n\t\tvar scaleFactor = this.config.zoomFactor;\n\t\tvar centerBias = this.config.centerBias;\n\t\tvar maxZoom = this.config.maxZoom;\n\n\t\tthis.clearResetTimeout();\n\n\t\tconst touch = e.nativeEvent.changedTouches[0];//e.nativeEvent.changedTouches[0];\n\t\t// console.log(\"touch start x: \" + touch.clientX + \"; y: \" + touch.clientY);\n\t\tthis.clearResetTimeout();\n\t\t//Assuming mouse\n\t\tif(this.config.isTouchEnabled){\n\n\t\t}else{\n\t\t\t//pageX includes scroll offset Value\n\t\t\t// console.log(\"[offset] - \"+this.offsetLeft + \"/\" + this.offsetTop);\n\t\t\tvar x =  (touch.pageX - this.offsetLeft) / currentZoomX + this.viewport.x;\n\t\t\tvar y =  (touch.pageY - this.offsetTop) / currentZoomY + this.viewport.y;\n\t\t\t//console.log(\"[Click before doZoom] touchXY => \"+touch.clientX + \"/\"+touch.clientY);\n\t\t\t// console.log(\"[Click before doZoom] curZoom and Viewport => \"+ currentZoomX + \"/\" + currentZoomY + \"/\"+ this.viewport.x + \"/\"+this.viewport.y);\n\t\t\tconsole.log(\"[Click before doZoom] xy => \"+x + \"/\"+y);\n\t\t\tthis.doZoom(x,y,scaleFactor,currentZoomVal,maxZoom,centerBias);\n\t\t\tthis.resetTimeoutFunc();\n\t\t}\n\t\t//e.stopPropagation();\n\t\treturn false;\n\t}\n\n\tresetTimeoutFunc =  () => {\n\t\tthis.clearResetTimeout();\n\t\tvar resetTimeout = this.config.resetTimeout;\n\t\tthis.resetTimeout = window.setTimeout(this.reset,resetTimeout);\n\t}\n\n\t/**\n\t * Zoom Function for Pointer/Mouse Event\n\t * @param x: x value of input point\n\t * @param y: y value of input point\n\t * @param scaleFactor: constant, how deep your keyboard will be zoomed.\n\t * @param currentZoomVal: currenet zoom level\n\t * @param maxZoom: if a zoom value exceeded maxZoom, users has to select the key\n\t * @param centerBias:\n\t * \n\t */\n\tdoZoom = (x,y,scaleFactor,currentZoomVal,maxZoom,centerBias) => {\n\t\t//var zoomtouch_event = jQuery.Event(\"zb_zoom\")\n\t\t//zoomtouch_event.x = x;, zoomtouch_event.y = y;\n\t\t//this.element.trigger(zoomtouch_event);\n\n\t\t console.log(\"[Debug] scaleFactor/ CurrnetZoomVal / maxZoom -> \" + scaleFactor + \"/ \"+currentZoomVal +\"/ \"+maxZoom);\n\t\tif(scaleFactor * currentZoomVal > maxZoom){\n\t\t\t//console.log(\"Exceeded maxZoom \");\n\t\t\tvar key = this.getKeyChar({x:x,y:y});\n\n\t\t\tif(key !== null){\n\t\t\t\t//this.element.trigger(zoomkey_event);\n\t\t\t\t//this.flashkey(zoomkey_event.key);\n\t\t\t\tconsole.log(\"[doZoom] Key is not null\");\n\t\t\t\tthis.props.onKeyCharReceived(key);\n\t\t\t\tthis.flashKey(key);\n\t\t\t}\n\t\t\tthis.reset();\n\t\t\treturn;\n\t\t}else{\n\t\t\tthis.inStartingPosition = false;\n\t\t\tvar newViewportWidth = this.viewport.width / scaleFactor ;\n\t\t\tvar newViewportHeight = this.viewport.height / scaleFactor;\n\n\t\t\tvar centeredX = x - newViewportWidth/2;\n\t\t\tvar centeredY = y - newViewportHeight/2;\n\n\t\t\tvar biasedViewportX = x - (newViewportWidth * (x - this.viewport.x))/\n\t\t\t\t\t\t\t\t\t\tthis.viewport.width;\n\t\t\tvar biasedViewportY = y- (newViewportHeight * (y - this.viewport.y))/\n\t\t\t\t\t\t\t\t\t\tthis.viewport.height;\n\t\t\t//console.log(\"doZoom in wip: \"+this.viewport.width + \":\"+this.viewport.height);\n\t\t\t//console.log(\"doZoom in wip: \"+this.viewport.x + \":\"+this.viewport.y);\n\t\t\t//console.log(\"doZoom in wip: \"+scaleFactor);\n\t\t\t//console.log(\"doZoom in wip: \"+newViewportWidth+ \":\"+newViewportHeight);\n\t\t\t//console.log(\"doZoom in wip: \"+centeredX + \":\" + centeredY);\n\t\t\tthis.setViewPort({\n\t\t\t\twidth: newViewportWidth,\n\t\t\t\theight: newViewportHeight,\n\t\t\t\tx: biasedViewportX * (1-centerBias) + centeredX * centerBias,\n\t\t\t\ty: biasedViewportY * (1-centerBias) + centeredY * centerBias,\n\t\t\t});\n\t\t}\n\t}\n\n\tgetXZoom = () =>{\n\t\treturn this.position.width / this.state.originalDimensions.width;\n\t}\n\tgetYZoom = () =>{\n\t\treturn this.position.height / this.state.originalDimensions.height;\n\t}\n\tgetZoom = () => {\n\t\treturn Math.max(this.getXZoom(), this.getYZoom());\n\t}\n\n\tflash = (text, duration, color) => {\n\t\tduration = duration || 250;\n\t\tcolor = color || \"white\";\n\t\t//window.clearTimeout(this.flashTimeout);\n\t\tthis.setState({\n\t\t\toverlayStyle:{\n\t\t\t\topacity: 0.95,\n\t\t\t\tcolor: color\n\t\t\t},\n\t\t\toverlayText: text\n\t\t});\n\t\tsetTimeout(\n\t\t\tfunction() {\n\t\t\t\tthis.setState({\n\t\t\t\toverlayStyle:{\n\t\t\t\t\topacity: 0}})\n\t\t\t}\n\t\t\t.bind(this),\n\t\t\tduration\n\t\t);\n\t}\n\n\tflashKey = (key) => {\n\t\tif(key === \"delete\") {\n\t\t\t//this.flash(\"&#9224;\");\n\t\t\tthis.flash(\"&#x232B\");\n\t\t} else if(key === \"enter\") {\n\t\t\tthis.flash(\"&#9252;\");\n\t\t} else if(key === \" \") {\n\t\t\tthis.flash(\"&#9251;\");\n\t\t} else {\n\t\t\tthis.flash(key);\n\t\t}\n\t}\n}\n\nexport default KeyboardZoom;\n"]},"metadata":{},"sourceType":"module"}