my_data<-read.csv('out.csv')
View(my_data)
View(my_data)
my_data<-read.csv('out.csv')
my_anova <- aov(TotalTime ~ KeyboardType * InputType, data = my_data)
my_anova
Anova(my_anova)
my_data<-read.csv('out.csv')
library(car)
my_anova <- aov(TotalTime ~ KeyboardType * InputType, data = my_data)
Anova(my_anova)
Anova(my_anova, type = "III")
install.packages(“car”)
install.packages('car')
my_data<-read.csv('out.csv')
library(car)
my_anova <- aov(TotalTime ~ KeyboardType * InputType, data = my_data)
Anova(my_anova)
my_data<-read.csv('out.csv')
library(car)
library(car)
library(car)
library(car)
install.packages("car")
library(car)
library(car)
library('car')
install.packages("car")
install.packages("car",dependencies = TRUE)
library(car)
install.packages("car")
install.packages("car")
install.packages("car")
my_data<-read.csv('out.csv')
my_data<-read.csv('out.csv')
library(car)
my_anova <- aov(TotalTime ~ KeyboardType * InputType, data = my_data)
Anova(my_anova)
my_anova1 <- aov(TotalTime ~ KeyboardType * InputType, data = my_data)
my_anova2 <- aov(TotalTime ~ KeyboardType * Movement, data = my_data)
Anova(my_anova1)
Anova(my_anova2)
my_data<-read.csv('out.csv')
library(car)
keyInput <- aov(TotalTime ~ KeyboardType * InputType, data = my_data)
keyMov <- aov(TotalTime ~ KeyboardType * Movement, data = my_data)
Anova(keyInput)
Anova(keyMov)
keyInput <- aov(Accuracy ~ KeyboardType * InputType, data = my_data)
keyMov <- aov(Accuracy ~ KeyboardType * Movement, data = my_data)
Anova(keyInput)
Anova(keyMov)
newdata <- subset(my_data, KeyboardType == 'normal' & InputType == 'alpha' & Movement == 'still')
newdata
newdata.TotalTime
newdata$TotalTime
mean(newdata$TotalTime)
newdata <- subset(my_data, KeyboardType == 'normal' & InputType == 'alpha' & Movement == 'still')
mean(newdata$TotalTime)
newdata <- subset(my_data, KeyboardType == 'normal' & InputType == 'symbol' & Movement == 'moving')
mean(newdata$TotalTime)
newdata <- subset(my_data, KeyboardType == 'normal' & InputType == 'alpha' & Movement == 'moving')
mean(newdata$TotalTime)
newdata <- subset(my_data, KeyboardType == 'normal' & InputType == 'symbol' & Movement == 'still')
mean(newdata$TotalTime)
newdata <- subset(my_data, KeyboardType == 'zoom' & InputType == 'alpha' & Movement == 'still')
mean(newdata$TotalTime)
newdata <- subset(my_data, KeyboardType == 'zoom' & InputType == 'symbol' & Movement == 'moving')
mean(newdata$TotalTime)
newdata <- subset(my_data, KeyboardType == 'zoom' & InputType == 'alpha' & Movement == 'moving')
mean(newdata$TotalTime)
newdata <- subset(my_data, KeyboardType == 'zomm' & InputType == 'symbol' & Movement == 'still')
mean(newdata$TotalTime)
newdata <- subset(my_data, KeyboardType == 'normal')
mean(newdata$TotalTime)
newdata <- subset(my_data, KeyboardType == 'zoom')
mean(newdata$TotalTime)
newdata <- subset(my_data, InputType == 'alpha')
mean(newdata$TotalTime)
newdata <- subset(my_data, InputType == 'symbol')
mean(newdata$TotalTime)
newdata <- subset(my_data, Movement == 'still')
mean(newdata$TotalTime)
newdata <- subset(my_data, Movement == 'moving')
mean(newdata$TotalTime)
mean(my_data$TotalTime)
mean(newdata$Accuracy)
newdata <- subset(my_data, KeyboardType == 'zoom')
mean(newdata$Accuracy)
newdata <- subset(my_data, InputType == 'alpha')
mean(newdata$Accuracy)
newdata <- subset(my_data, KeyboardType == 'normal')
mean(newdata$Accuracy)
newdata <- subset(my_data, KeyboardType == 'zoom')
mean(newdata$Accuracy)
newdata <- subset(my_data, InputType == 'alpha')
mean(newdata$Accuracy)
newdata <- subset(my_data, InputType == 'symbol')
mean(newdata$Accuracy)
newdata <- subset(my_data, Movement == 'still')
mean(newdata$Accuracy)
newdata <- subset(my_data, Movement == 'moving')
mean(newdata$Accuracy)
mean(my_data$Accuracy)
newdata <- subset(my_data, KeyboardType == 'normal')
mean(newdata$TotalTime)
newdata <- subset(my_data, KeyboardType == 'zoom')
mean(newdata$TotalTime)
newdata <- subset(my_data, InputType == 'alpha')
mean(newdata$TotalTime)
newdata <- subset(my_data, InputType == 'symbol')
mean(newdata$TotalTime)
newdata <- subset(my_data, Movement == 'still')
mean(newdata$TotalTime)
newdata <- subset(my_data, Movement == 'moving')
mean(newdata$TotalTime)
mean(my_data$TotalTime)
newdata <- subset(my_data, KeyboardType == 'normal')
mean(newdata$Accuracy)
newdata <- subset(my_data, KeyboardType == 'zoom')
mean(newdata$Accuracy)
newdata <- subset(my_data, InputType == 'alpha')
mean(newdata$Accuracy)
newdata <- subset(my_data, InputType == 'symbol')
mean(newdata$Accuracy)
newdata <- subset(my_data, Movement == 'still')
mean(newdata$Accuracy)
newdata <- subset(my_data, Movement == 'moving')
mean(newdata$Accuracy)
mean(my_data$Accuracy)
my_data<-read.csv('out.csv')
library(car)
keyInput <- aov(TotalTime ~ KeyboardType * InputType, data = my_data)
keyMov <- aov(TotalTime ~ KeyboardType * Movement, data = my_data)
Anova(keyInput,type = "III")
Anova(keyMov,type = "III")
keyInput <- aov(Accuracy ~ KeyboardType * InputType, data = my_data)
keyMov <- aov(Accuracy ~ KeyboardType * Movement, data = my_data)
Anova(keyInput,type = "III")
Anova(keyMov,type = "III")
sprintf("totaltime")
newdata <- subset(my_data, KeyboardType == 'normal')
mean(newdata$TotalTime)
newdata <- subset(my_data, KeyboardType == 'zoom')
mean(newdata$TotalTime)
newdata <- subset(my_data, InputType == 'alpha')
mean(newdata$TotalTime)
newdata <- subset(my_data, InputType == 'symbol')
mean(newdata$TotalTime)
newdata <- subset(my_data, Movement == 'still')
mean(newdata$TotalTime)
newdata <- subset(my_data, Movement == 'moving')
mean(newdata$TotalTime)
mean(my_data$TotalTime)
sprintf("accuracy")
newdata <- subset(my_data, KeyboardType == 'normal')
mean(newdata$Accuracy)
newdata <- subset(my_data, KeyboardType == 'zoom')
mean(newdata$Accuracy)
newdata <- subset(my_data, InputType == 'alpha')
mean(newdata$Accuracy)
newdata <- subset(my_data, InputType == 'symbol')
mean(newdata$Accuracy)
newdata <- subset(my_data, Movement == 'still')
mean(newdata$Accuracy)
newdata <- subset(my_data, Movement == 'moving')
mean(newdata$Accuracy)
mean(my_data$Accuracy)
mean(subset(my_data, KeyboardType == 'normal')$TotalTime)
library(car)
Anova(aov(TotalTime ~ KeyboardType * InputType, data = my_data),type = "III")
Anova(aov(TotalTime ~ KeyboardType * Movement, data = my_data),type = "III")
Anova(aov(Accuracy ~ KeyboardType * InputType, data = my_data),type = "III")
Anova(aov(Accuracy ~ KeyboardType * Movement, data = my_data),type = "III")
sprintf("totaltime")
mean(subset(my_data, KeyboardType == 'normal')$TotalTime)
mean(subset(my_data, KeyboardType == 'zoom')$TotalTime)
mean(subset(my_data, InputType == 'alpha')$TotalTime)
mean(subset(my_data, InputType == 'symbol')$TotalTime)
mean(subset(my_data, Movement == 'still')$TotalTime)
mean(subset(my_data, Movement == 'moving')$TotalTime)
mean(my_data$TotalTime)
sprintf("accuracy")
mean(subset(my_data, KeyboardType == 'normal')$Accuracy)
mean(subset(my_data, KeyboardType == 'zoom')$Accuracy)
mean(subset(my_data, InputType == 'alpha')$Accuracy)
mean(subset(my_data, InputType == 'symbol')$Accuracy)
mean(subset(my_data, Movement == 'still')$Accuracy)
mean(subset(my_data, Movement == 'moving')$Accuracy)
mean(my_data$Accuracy)
hist(subset(my_data, KeyboardType == 'normal')$TotalTime, col='blue')
hist(subset(my_data, KeyboardType == 'zoom')$TotalTime, col='red', add=T)
hist(subset(my_data, KeyboardType == 'normal')$TotalTime, col=rgb(0,0,1,0.5))
hist(subset(my_data, KeyboardType == 'zoom')$TotalTime, col=rgb(1,0,0,0.5), add=T)
hist(subset(my_data, KeyboardType == 'normal')$TotalTime, col=rgb(0,0,1,0.5),main='Miniature vs. Zooming',xlab='Total completion time')
hist(subset(my_data, KeyboardType == 'zoom')$TotalTime, col=rgb(1,0,0,0.5), add=T)
hist(subset(my_data, KeyboardType == 'normal')$TotalTime, col=rgb(0,0,1,0.5),main='Miniature vs. Zooming',xlab='Total completion time',labels = TRUE)
hist(subset(my_data, KeyboardType == 'zoom')$TotalTime, col=rgb(1,0,0,0.5), add=T)
ggplot2.histogram(data=subset(my_data, select=c("KeyboardType", "TotalTime")), xName='weight',
groupName='sex', legendPosition="top",
alpha=0.5 )
select=c(ID, Weight))
install.packages("devtools",dependencies = TRUE)
library(devtools)
library(devtools)
library(devtools)
install.packages("devtools",dependencies = TRUE)
install.packages("devtools")
library(devtools)
library(devtools)
install_github("easyGgplot2", "kassambara")
library(devtools)
install.packages("devtools")
library(devtools)
library(devtools)
install.packages("~/Downloads/devtools_1.13.6.tar", repos = NULL)
install.packages("~/Downloads/devtools_1.13.6.tgz", repos = NULL, type = .Platform$pkgType)
library(devtools)
install_github("easyGgplot2", "kassambara")
library(easyGgplot2)
library(easyGgplot2)
ggplot2.histogram(data=subset(my_data, select=c("KeyboardType", "TotalTime")), xName='weight',groupName='sex', legendPosition="top",alpha=0.5)
my_data<-read.csv('out.csv')
library(car)
Anova(aov(TotalTime ~ KeyboardType * InputType, data = my_data),type = "III")
Anova(aov(TotalTime ~ KeyboardType * Movement, data = my_data),type = "III")
Anova(aov(Accuracy ~ KeyboardType * InputType, data = my_data),type = "III")
Anova(aov(Accuracy ~ KeyboardType * Movement, data = my_data),type = "III")
sprintf("totaltime")
mean(subset(my_data, KeyboardType == 'normal')$TotalTime)
mean(subset(my_data, KeyboardType == 'zoom')$TotalTime)
mean(subset(my_data, InputType == 'alpha')$TotalTime)
mean(subset(my_data, InputType == 'symbol')$TotalTime)
mean(subset(my_data, Movement == 'still')$TotalTime)
mean(subset(my_data, Movement == 'moving')$TotalTime)
mean(my_data$TotalTime)
sprintf("accuracy")
mean(subset(my_data, KeyboardType == 'normal')$Accuracy)
mean(subset(my_data, KeyboardType == 'zoom')$Accuracy)
mean(subset(my_data, InputType == 'alpha')$Accuracy)
mean(subset(my_data, InputType == 'symbol')$Accuracy)
mean(subset(my_data, Movement == 'still')$Accuracy)
mean(subset(my_data, Movement == 'moving')$Accuracy)
mean(my_data$Accuracy)
hist(subset(my_data, KeyboardType == 'normal')$TotalTime, col=rgb(0,0,1,0.5),main='Miniature vs. Zooming',xlab='Total completion time',)
hist(subset(my_data, KeyboardType == 'zoom')$TotalTime, col=rgb(1,0,0,0.5), add=T)
library(easyGgplot2)
newdata<-subset(my_data, select=c("KeyboardType", "TotalTime"))
View(newdata)
ggplot2.histogram(data=, xName='weight',groupName='sex', legendPosition="top",alpha=0.5)
ggplot2.histogram(data=newdata, xName='weight',groupName='sex', legendPosition="top",alpha=0.5)
ggplot2.histogram(data=newdata, xName='TotalTime',groupName='KeyboardType', legendPosition="top",alpha=0.5)
ggplot2.histogram(data=subset(my_data, select=c("KeyboardType", "TotalTime")), xName='TotalTime',groupName='KeyboardType', legendPosition="top",alpha=0.5)
ggplot2.histogram(data=subset(my_data, select=c("KeyboardType", "TotalTime")), xName='TotalTime',groupName='KeyboardType', legendPosition="top",alpha=0.5)
ggplot2.histogram(data=subset(my_data, select=c("InputType", "TotalTime")), xName='TotalTime',groupName='InputType', legendPosition="top",alpha=0.5)
ggplot2.histogram(data=subset(my_data, select=c("Movement", "TotalTime")), xName='TotalTime',groupName='Movement', legendPosition="top",alpha=0.5)
ggplot2.histogram(data=subset(my_data, select=c("KeyboardType", "Accuracy")), xName='Accuracy',groupName='KeyboardType', legendPosition="top",alpha=0.5)
ggplot2.histogram(data=subset(my_data, select=c("InputType", "Accuracy")), xName='Accuracy',groupName='InputType', legendPosition="top",alpha=0.5)
ggplot2.histogram(data=subset(my_data, select=c("Movement", "Accuracy")), xName='Accuracy',groupName='Movement', legendPosition="top",alpha=0.5)
Anova(aov(TotalTime ~ KeyboardType * InputType, data = my_data),type = "III")
Anova(aov(TotalTime ~ KeyboardType * Movement, data = my_data),type = "III")
Anova(aov(Accuracy ~ KeyboardType * InputType, data = my_data),type = "III")
Anova(aov(Accuracy ~ KeyboardType * Movement, data = my_data),type = "III")
Anova(aov(TotalTime ~ KeyboardType * InputType, data = my_data),type = "III")
Anova(aov(TotalTime ~ KeyboardType * Movement, data = my_data),type = "III")
ggplot2.histogram(data=subset(my_data, select=c("KeyboardType", "TotalTime")), xName='TotalTime',groupName='KeyboardType', legendPosition="top",alpha=0.5)
ggplot2.histogram(data=subset(my_data, select=c("InputType", "TotalTime")), xName='TotalTime',groupName='InputType', legendPosition="top",alpha=0.5)
ggplot2.histogram(data=subset(my_data, select=c("Movement", "TotalTime")), xName='TotalTime',groupName='Movement', legendPosition="top",alpha=0.5)
ggplot2.histogram(data=subset(my_data, select=c("KeyboardType", "Accuracy")), xName='Accuracy',groupName='KeyboardType', legendPosition="top",alpha=0.5)
ggplot2.histogram(data=subset(my_data, select=c("InputType", "Accuracy")), xName='Accuracy',groupName='InputType', legendPosition="top",alpha=0.5)
ggplot2.histogram(data=subset(my_data, select=c("Movement", "Accuracy")), xName='Accuracy',groupName='Movement', legendPosition="top",alpha=0.5)
library(car)
summary(aov(TotalTime ~ KeyboardType * InputType, data = my_data),type = "III")
summary(aov(TotalTime ~ KeyboardType * Movement, data = my_data),type = "III")
summary(aov(Accuracy ~ KeyboardType * InputType, data = my_data),type = "III")
summary(aov(Accuracy ~ KeyboardType * Movement, data = my_data),type = "III")
my_data<-read.csv('out.csv')
library(car)
summary(aov(TotalTime ~ KeyboardType * InputType, data = my_data))
summary(aov(TotalTime ~ KeyboardType * Movement, data = my_data))
summary(aov(Accuracy ~ KeyboardType * InputType, data = my_data))
summary(aov(Accuracy ~ KeyboardType * Movement, data = my_data))
summary(aov(Accuracy ~ KeyboardType * InputType, data = my_data))
summary(aov(Accuracy ~ KeyboardType * Movement, data = my_data))
View(my_data)
View(my_data)
summary(aov(TotalTime ~ KeyboardType * InputType, data = my_data))
summary(aov(TotalTime ~ KeyboardType * Movement, data = my_data))
summary(aov(Accuracy ~ KeyboardType * InputType, data = my_data))
summary(aov(Accuracy ~ KeyboardType * Movement, data = my_data))
